version: 2
jobs:
  flake8_test:
    docker:
      - image: python:3.6.6
    working_directory: ~/project
    steps:
      - checkout
      # this next run would not be necessary if you
      # include tox in your base image
      - run:
          name: Install Tox
          command: pip install tox==2.9.1
      - run:
          name: Linting
          command: tox -e flake8
  mypy_test:
    docker:
      - image: python:3.6.6
    working_directory: ~/project
    steps:
      - checkout
      # this next run would not be necessary if you
      # include tox in your base image
      - run:
          name: Install Tox
          command: pip install tox==2.9.1
      - run:
          name: Static Typing
          command: tox -e mypy
  unit_test:
    docker:
      - image: python:3.6.6
        environment:
          APP_ENVIRONMENT: circle
    working_directory: ~/project
    steps:
      - checkout
      # this next run would not be necessary if you
      # include tox in your base image
      - run:
          name: Install Tox
          command: pip install tox==2.9.1
      - run:
          name: Integration
          command: tox -e unit
  integration_test:
    docker:
      - image: python:3.6.6
      - image: rabbitmq:3.7.8
      - image: redis:5.0.0
    working_directory: ~/project
    steps:
      - checkout
      # this next run would not be necessary if you
      # include tox in your base image
      - run:
          name: Install Tox
          command: pip install tox==2.9.1
      - run:
          name: Install Requirements
          command: |
            pip install -r requirements.txt
      - run:
          name: Run Celery
          command: celery worker --detach -A blogcrawler.celery.app.app
      - run:
          name: Integration
          environment:
            APP_ENVIRONMENT: circle
          command: |
            echo 'export APP_ENVIRONMENT=circle' >> ~/.bashrc
            source ~/.bashrc
            tox -e integration

workflows:
  version: 2
  build_test:
    jobs:
      - flake8_test
      - mypy_test
      - unit_test
      - integration_test
